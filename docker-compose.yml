version: '3.9'
services:
  #  docker run --name redis-cli  -it --network voting-network --rm redis redis-cli -h redis
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - voting-network
  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    ports:
      - "15672:15672" # admin port
      - "5672:5672" # default port
    labels:
      NAME: "rabbitmq"
    volumes:
      - ./extras/rabbitmq/enabled_plugins.txt:/etc/rabbitmq/enabled_plugins
      - ./extras/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - voting-network
  golang_api:
    image: vorkurk/go-voting-app:latest
    restart: on-failure
    command:
      - web
    environment:
      REDIS_HOST: redis:6379
      RABBIT_HOST: amqp://rabbitmq:rabbitmq@rabbit:5672/
    build:
      context: src/golang
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - voting-network
  golang_worker:
    image: vorkurk/go-voting-app:latest
    restart: on-failure
    command:
      - worker
    environment:
      REDIS_HOST: redis:6379
      RABBIT_HOST: amqp://rabbitmq:rabbitmq@rabbit:5672/
    build:
      context: src/golang
      dockerfile: Dockerfile
    networks:
      - voting-network
  nodejs:
    image: vorkurk/nodejs-event-app:latest
    restart: on-failure
    ports:
      - "9000:9000"
    environment:
      RABBIT_HOST: amqp://rabbitmq:rabbitmq@rabbit:5672/
    build:
      context: src/nodejs
      dockerfile: Dockerfile
    networks:
      - voting-network
  ui:
    restart: on-failure
    image: vorkurk/react-voting-app:latest
    build:
      context: src/react
      dockerfile: Dockerfile
      args:
        SOCKET_IO_PATH: /events/socket.io
        SOCKET_IO_HOST: http://localhost:9000
    ports:
      - "3000:80"
    networks:
      - voting-network
networks:
  voting-network:
    name: voting-network
